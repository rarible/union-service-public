application:
  project: protocol

server:
  shutdown: graceful
  port: 8080

spring:
  application.name: union-search-indexer
  jackson:
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    default-property-inclusion: non_null
  aop:
    proxy-target-class: false
  main:
    banner-mode: log
    web-application-type: reactive

rarible:
  core:
    client:
      name: rarible-protocol

handler:
  activity:
    enabled: ${consul.indexer.activity.enabled:true}
  collection:
    enabled: ${consul.indexer.collection.enabled:true}
  item:
    enabled: ${consul.indexer.item.enabled:false}
  order:
    enabled: ${consul.indexer.order.enabled:false}
  ownership:
    enabled: ${consul.indexer.ownership.enabled:false}

indexer:
  consumer:
    broker-replica-set: ${kafka.hosts}
    worker-count: 3

integration:
  ethereum:
    enabled: ${consul.ethereum.enabled:true}
    auctionContracts: ${consul.ethereum.auctionContracts:}
  polygon:
    enabled: ${consul.polygon.enabled:true}
    auctionContracts: ${consul.polygon.auctionContracts:}
  mantle:
    enabled: ${consul.mantle.enabled:false}
    auctionContracts: ${consul.mantle.auctionContracts:}
  flow:
    enabled: ${consul.flow.enabled:true}
    auctionContracts: ${consul.flow.auctionContracts:}
  tezos:
    enabled: ${consul.tezos.enabled:true}
    dipdup:
      network: ${consul.tezos.dipdup.network:}
      dipdupUrl: ${consul.tezos.dipdup.dipdupUrl:}
      dipdupToken: ${consul.tezos.dipdup.dipdupToken:}
      nodeAddress: ${consul.tezos.dipdup.nodeAddress:}
      chainId: ${consul.tezos.dipdup.chainId:}
      sigChecker: ${consul.tezos.dipdup.sigChecker:}
      tzktUrl: ${consul.tezos.dipdup.tzktUrl:}
      ipfsUrl: ${consul.tezos.dipdup.ipfsUrl:"https://ipfs.io"}
      useDipDupTokens: ${consul.tezos.dipdup.useDipDupTokens:false}
      useDipDupRoyalty: ${consul.tezos.dipdup.useDipDupRoyalty:false}
      saveDipDupRoyalty: ${consul.tezos.dipdup.saveDipDupRoyalty:false}
      enrichDipDupCollection: ${consul.tezos.dipdup.enrichDipDupCollection:true}
      tzktProperties:
        retryAttempts: ${consul.tezos.dipdup.tzktProperties.retryAttempts:2}
        retryDelay: ${consul.tezos.dipdup.tzktProperties.retryDelay:15000}
        tokenBatch: ${consul.tezos.dipdup.tzktProperties.tokenBatch:false}
        ownershipBatch: ${consul.tezos.dipdup.tzktProperties.ownershipBatch:false}
        collectionBatch: ${consul.tezos.dipdup.tzktProperties.collectionBatch:false}
        wrapActivityHashes: ${consul.tezos.dipdup.tzktProperties.wrapActivityHashes:false}
        checkTokenBalance: ${consul.tezos.dipdup.tzktProperties.checkTokenBalance:false}
      knownAddresses:
        hen: ${consul.tezos.dipdup.knownAddresses.hen:}
        henRoyalties: ${consul.tezos.dipdup.knownAddresses.henRoyalties:}
        kalamint: ${consul.tezos.dipdup.knownAddresses.kalamint:}
        fxhashV1: ${consul.tezos.dipdup.knownAddresses.fxhashV1:}
        fxhashV1Manager: ${consul.tezos.dipdup.knownAddresses.fxhashV1Manager:}
        fxhashV2: ${consul.tezos.dipdup.knownAddresses.fxhashV2:}
        versum: ${consul.tezos.dipdup.knownAddresses.versum:}
        royaltiesManager: ${consul.tezos.dipdup.knownAddresses.royaltiesManager:}
        bidou8x8: ${consul.tezos.dipdup.knownAddresses.bidou8x8:}
        bidou24x24: ${consul.tezos.dipdup.knownAddresses.bidou24x24:}
        dogami: ${consul.tezos.dipdup.knownAddresses.dogami:}
        dogamiGap: ${consul.tezos.dipdup.knownAddresses.dogamiGap:}
        dogamiStar: ${consul.tezos.dipdup.knownAddresses.dogamiStar:}
      marketplaces:
        hen: ${consul.tezos.dipdup.marketplaces.hen:false}
        objkt: ${consul.tezos.dipdup.marketplaces.objkt:false}
        objktV2: ${consul.tezos.dipdup.marketplaces.objktV2:false}
        versum: ${consul.tezos.dipdup.marketplaces.versum:false}
        teia: ${consul.tezos.dipdup.marketplaces.teia:false}
      consumer:
        broker-replica-set: ${consul.tezos.dipdup.consumer.hosts:}
        username: ${consul.tezos.dipdup.consumer.username:}
        password: ${consul.tezos.dipdup.consumer.password:}
    client:
      url: ${consul.tezos.api.baseUrl}
    consumer:
      broker-replica-set: ${consul.tezos.kafka.hosts}
      username: ${consul.tezos.kafka.username}
      password: ${consul.tezos.kafka.password}
    auctionContracts: ${consul.tezos.auctionContracts:}
  solana:
    enabled: ${consul.solana.enabled:false}
  immutablex:
    enabled: ${consul.immutablex.enabled:false}
    client:
      url: ${consul.immutablex.api.baseUrl:}
      byIdsChunkSize: 16
    clientV3:
      url: ${consul.immutablex.api.baseUrlV3:}
      byIdsChunkSize: 16
    apiKey: ${consul.immutablex.api.key:}
    featureFlags:
      useOrderV3: ${consul.immutablex.api.useOrderV3:false}
common:
  producer:
    broker-replica-set: ${kafka.hosts}
