logging:
  level.org.springframework.data.mongodb.core.ReactiveMongoTemplate: DEBUG

common:
  currency:
    refresh:
      cron: "-"
  client:
    tezos:
      url: "http://localhost:8080"
  feature-flags:
    enableRevertedActivityEventSending: false
    enableOwnershipSourceEnrichment: true
    enableItemLastSaleEnrichment: true
    enableCustomCollections: true
    enableMongoActivityWrite: true
    enableMongoActivityRead: true
    enableItemBestBidsByCurrency: true

enrichment:
  collection:
    mappings:
      - customCollection: "ETHEREUM:0x7777777777777777777777777777777777777777"
        collections:
          - "ETHEREUM:0x8888888888888888888888888888888888888888"
  currencies:
    bestBidByCurrencyWhitelist:
      - ETHEREUM:0xc778417e063141139fce010982780140aa0cd5ab
      - POLYGON:0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa
rarible:
  core:
    apm:
      agent:
        enabled: false
  task:
    initialDelay: 600000
  loader:
    enableWorkers: true # Enable workers in the tests.
    workers: 1
    enableRetrySchedulerJob: false

integration:
  ethereum:
    enabled: true
    consumer:
      broker-replica-set: ${kafka.hosts}
      workers:
        item: 1
        ownership: 1
        order: 1
  polygon:
    enabled: true
    consumer:
      broker-replica-set: ${kafka.hosts}
      workers:
        item: 1
        ownership: 1
        order: 1
  flow:
    enabled: true
    consumer:
      broker-replica-set: ${kafka.hosts}
      workers:
        item: 1
        ownership: 1
        order: 1
  tezos:
    enabled: true
    client:
      url: "http://localhost:8080"
    consumer:
      broker-replica-set: ${kafka.hosts}
      username:
      password:
      workers:
        item: 1
        ownership: 1
        order: 1
    dipdup:
      dipdupUrl: "http://localhost:8080"
      tzktUrl: "http://localhost:8080"
      nodeAddress: "http://localhost:8080"
      chainId: ""
      sigChecker: ""
      consumer:
        broker-replica-set: ${kafka.hosts}
        workers:
          item: 1
          activity: 1
          order: 1
  solana:
    enabled: true
    consumer:
      broker-replica-set: ${kafka.hosts}
      workers:
        item: 1
        ownership: 1
        order: 1
  immutablex:
    scanner:
      job:
        initialDelay:
          mints: 600
          transfers: 600
          trades: 600
          deposits: 600
          withdrawals: 600
          orders: 600

meta:
  embedded:
    publicUrl: "http://localhost:8080/content/embedded"
